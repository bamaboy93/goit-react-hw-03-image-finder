{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","service/Api.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","searchQuery","onSearchInputChange","e","setState","target","value","onSearchFromSubmit","onFormSubmit","props","preventDefault","this","className","onSubmit","type","autoComplete","autoFocus","onChange","placeholder","Component","ImageGalleryItem","src","largeImg","alt","height","width","ImageGallery","pictures","onImgClick","onClick","map","id","webformatURL","largeImageURL","axios","defaults","baseURL","Api","getImages","query","page","perPage","get","then","res","data","hits","Button","onBtnClick","text","modalRoot","document","querySelector","Modal","onKeydownClick","onCloseModal","code","onBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","children","App","currentPictures","loader","openModal","OnLoadMore","prev","nodeName","dataset","img","toggleModal","loaderToggle","fetchPictures","options","prevProps","prevState","length","scrollTo","top","documentElement","scrollHeight","behavior","color","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.78104731.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    onFormSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    searchQuery: '',\n  };\n\n  onSearchInputChange = e => {\n    this.setState({\n      searchQuery: e.target.value,\n    });\n  };\n\n  onSearchFromSubmit = e => {\n    const { onFormSubmit } = this.props;\n    e.preventDefault();\n\n    onFormSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    return (\n      <div>\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={this.onSearchFromSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              value={searchQuery}\n              onChange={this.onSearchInputChange}\n              placeholder=\"Search images...\"\n            />\n          </form>\n        </header>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst ImageGalleryItem = ({ src, largeImg }) => (\n  <li className=\"ImageGalleryItem\">\n    <img\n      src={src}\n      alt=\"\"\n      className=\"ImageGalleryItem-image\"\n      data-img={largeImg}\n      height=\"240\"\n      width=\"320\"\n    />\n  </li>\n);\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ pictures, onImgClick }) => (\n  <ul className=\"ImageGallery\" onClick={onImgClick}>\n    {pictures.map(({ id, webformatURL, largeImageURL }) => (\n      <ImageGalleryItem key={id} src={webformatURL} largeImg={largeImageURL} />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  pictures: PropTypes.arrayOf(PropTypes.object),\n  onImgClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst Api = {\n  getImages({ query, page, perPage }) {\n    return axios\n      .get(\n        `/?q=${query}&key=20823750-0b59b5ef6ebc149bfc71c9c45&page=${page}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\n      )\n      .then(res => res.data.hits);\n  },\n};\nexport default Api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onBtnClick, text }) => (\n  <button className=\"Button\" type=\"button\" onClick={onBtnClick}>\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onCloseModal: PropTypes.func,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeydownClick);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeydownClick);\n  }\n\n  onKeydownClick = e => {\n    const { onCloseModal } = this.props;\n    if (e.code === 'Escape') {\n      onCloseModal();\n    }\n  };\n  onBackdropClick = e => {\n    const { onCloseModal } = this.props;\n    if (e.currentTarget === e.target) {\n      onCloseModal();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.onBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import Searchbar from './components/Searchbar/Searchbar';\n\nimport React, { Component } from 'react';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Api from './service/Api';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nexport default class App extends Component {\n  state = {\n    query: '',\n    page: 1,\n    perPage: 12,\n    pictures: [],\n    currentPictures: '',\n    loader: false,\n    openModal: false,\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const { query, page, pictures } = this.state;\n    if (prevState.query !== query || prevState.page !== page) {\n      this.fetchPictures().then(() => {\n        this.loaderToggle();\n        if (pictures.length > 10) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      });\n    }\n  }\n\n  OnLoadMore = () => {\n    this.setState(prev => ({\n      page: prev.page + 1,\n    }));\n  };\n\n  onImgClick = e => {\n    if (e.target.nodeName !== 'IMG') {\n      return;\n    }\n    this.setState({\n      currentPictures: e.target.dataset.img,\n    });\n    this.toggleModal();\n  };\n\n  loaderToggle = () => {\n    this.setState(prev => ({\n      loader: !prev.loader,\n    }));\n  };\n\n  fetchPictures = () => {\n    const { query, page, perPage } = this.state;\n\n    this.loaderToggle();\n    const options = {\n      query: query,\n      page: page,\n      perPage: perPage,\n    };\n    return Api.getImages(options).then(hits => {\n      this.setState(prev => ({\n        pictures: [...prev.pictures, ...hits],\n      }));\n    });\n  };\n\n  onSubmit = searchQuery => {\n    this.setState({\n      query: searchQuery,\n      page: 1,\n      pictures: [],\n    });\n  };\n  toggleModal = () => {\n    this.setState(prev => ({\n      openModal: !prev.openModal,\n    }));\n  };\n  render() {\n    const { pictures, query, loader, openModal, currentPictures } = this.state;\n    return (\n      <div className=\"App\">\n        {loader && (\n          <Modal>\n            <Loader type=\"Rings\" color=\"#00BFFF\" height={700} width={700} />\n          </Modal>\n        )}\n        <Searchbar value={query} onFormSubmit={this.onSubmit} />\n        <ImageGallery pictures={pictures} onImgClick={this.onImgClick} />\n        {pictures.length > 0 && (\n          <Button\n            onBtnClick={this.OnLoadMore}\n            text={loader ? 'Loading' : 'Load More'}\n          />\n        )}\n\n        {openModal && (\n          <Modal onCloseModal={this.toggleModal}>\n            <img src={currentPictures} alt=\"Dont Worry Be Happy\" />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}